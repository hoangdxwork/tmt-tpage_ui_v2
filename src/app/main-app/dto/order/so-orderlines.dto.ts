
export interface Product {
    Id: number;
    EAN13?: any;
    DefaultCode: string;
    NameTemplate: string;
    NameNoSign?: any;
    ProductTmplId: number;
    UOMId: number;
    UOMName?: any;
    UOMPOId: number;
    QtyAvailable: number;
    VirtualAvailable: number;
    OutgoingQty?: any;
    IncomingQty?: any;
    NameGet: string;
    POSCategId?: any;
    Price?: any;
    Barcode: string;
    Image?: any;
    ImageUrl?: any;
    PriceVariant: number;
    SaleOK: boolean;
    PurchaseOK: boolean;
    DisplayAttributeValues?: any;
    LstPrice: number;
    Active: boolean;
    ListPrice: number;
    PurchasePrice?: any;
    DiscountSale?: any;
    DiscountPurchase?: any;
    StandardPrice: number;
    Weight: number;
    Volume?: any;
    OldPrice?: any;
    IsDiscount: boolean;
    ProductTmplEnableAll: boolean;
    Version: number;
    Description?: any;
    LastUpdated: Date;
    Type: string;
    CategId: number;
    CostMethod?: any;
    InvoicePolicy: string;
    Variant_TeamId: number;
    Name: string;
    PropertyCostMethod?: any;
    PropertyValuation?: any;
    PurchaseMethod: string;
    SaleDelay: number;
    Tracking?: any;
    Valuation?: any;
    AvailableInPOS: boolean;
    CompanyId?: any;
    IsCombo?: any;
    NameTemplateNoSign: string;
    TaxesIds: any[];
    StockValue?: any;
    SaleValue?: any;
    PosSalesCount?: any;
    Factor?: any;
    CategName?: any;
    AmountTotal?: any;
    NameCombos: any[];
    RewardName?: any;
    Product_UOMId?: any;
    Tags?: any;
    DateCreated: Date;
}

export interface ProductUOM {
    Id: number;
    Name: string;
    NameNoSign: string;
    Rounding: number;
    Active: boolean;
    Factor: number;
    FactorInv: number;
    UOMType: string;
    CategoryId: number;
    CategoryName: string;
    Description?: any;
    ShowUOMType: string;
    NameGet: string;
    ShowFactor: number;
    DateCreated: Date;
}

export interface OrderLine {
    Id: number;
    ProductId: number;
    ProductUOMId: number;
    PriceUnit: number;
    ProductUOMQty: number;
    Discount: number;
    PriceTotal?: any;
    PriceSubTotal: number;
    AccountId: number;
    PriceRecent: number;
    ProductName: string;
    ProductUOMName: string;
    Weight: number;
    Note?: any;
    Product: Product;
    ProductUOM: ProductUOM;
}

export interface Partner {
    Id: number;
    Name: string;
    DisplayName: string;
    Street: string;
    Website?: any;
    Phone: string;
    PhoneReport?: any;
    Mobile?: any;
    Fax?: any;
    Email?: any;
    Supplier: boolean;
    Customer: boolean;
    IsContact?: any;
    IsCompany: boolean;
    CompanyId?: any;
    Ref?: any;
    Comment?: any;
    UserId?: any;
    Active: boolean;
    Employee: boolean;
    TaxCode?: any;
    ParentId?: any;
    PurchaseCurrencyId?: any;
    Credit: number;
    Debit: number;
    TitleId?: any;
    Function?: any;
    Type: string;
    CompanyType: string;
    AccountReceivableId?: any;
    AccountPayableId?: any;
    StockCustomerId?: any;
    StockSupplierId?: any;
    Barcode?: any;
    OverCredit: boolean;
    CreditLimit: number;
    PropertyProductPricelistId?: any;
    Zalo?: any;
    Facebook?: any;
    FacebookId?: any;
    FacebookASIds?: any;
    FacebookPSId?: any;
    Image?: any;
    ImageUrl?: any;
    LastUpdated?: any;
    LoyaltyPoints?: any;
    Discount: number;
    AmountDiscount: number;
    PartnerCategoryId?: any;
    PartnerCategoryName?: any;
    NameNoSign: string;
    PropertyPaymentTermId?: any;
    PropertySupplierPaymentTermId?: any;
    CategoryId: number;
    DateCreated: Date;
    BirthDay?: any;
    DepositAmount?: any;
    Status: string;
    StatusText: string;
    StatusStyle?: any;
    ZaloUserId?: any;
    ZaloUserName?: any;
    CityCode: string;
    CityName: string;
    DistrictCode: string;
    DistrictName: string;
    WardCode: string;
    WardName: string;
    City?: any;
    District?: any;
    Ward?: any;
}

export interface SaleOnlineOrderGetDetailsDto {
    '@odata.context'?: string;
    Id: number;
    facebookId: string;
    facebookName: string;
    ids: string[];
    comment: string;
    isProductDefault: boolean;
    ListIdError: any[];
    Reference: string;
    orderLines: OrderLine[];
    partner: Partner;
    warehouse?: any;
}


